import Head from "next/head"
import Image from "next/image"
import { useMediaQuery } from "../hooks"
import { useEffect, useState } from "react"

import Grid from "../assets/grid.svg"
import GridSm from "../assets/grid-sm.svg"
import GridLg from "../assets/grid-lg.svg"
import Glow from "../assets/glow.png"

import LoginButton from "../components/landing/loginButton"
import Link from "next/link"
import { GetServerSideProps } from "next"
import { authOptions } from "./api/auth/[...nextauth]"
import { getSession, useSession } from "next-auth/react"
import { Session, unstable_getServerSession } from "next-auth"

const Home = () => {
  const mediaLg_ = useMediaQuery("(min-width: 1024px)")
  const mediaSm_ = useMediaQuery("(min-width: 640px)")

  const [mediaLg, setMediaLg] = useState<boolean>(false)
  const [mediaSm, setMediaSm] = useState<boolean>(false)

  useEffect(() => {
    setMediaLg(mediaLg_)
    setMediaSm(mediaSm_)
  }, [])

  return (
    <div>
      <Head>
        <title>OneWay</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="relative z-10 flex h-screen w-screen flex-col items-center justify-center overflow-hidden">
        <div className="absolute -z-20 flex h-full w-full items-center justify-center">
          <Image
            src={Glow}
            alt=""
            className="aspect-[5/3] w-[90%] max-w-5xl -translate-y-12 grayscale"
          />
        </div>
        <div className="absolute -z-10 h-full w-full">
          {/* {`The view port is ${
            mediaLg
              ? "at least 1024px"
              : mediaSm
              ? "at least 640px"
              : "less than 640px"
          }`} */}
          {mediaLg ? (
            <div className="grid-gradient relative mt-[60vh] h-[40vh] w-full">
              <Image
                src={GridLg}
                className="pointer-events-none absolute bottom-0 h-full w-full select-none"
                alt=""
                objectFit="cover"
                layout="fill"
              />
            </div>
          ) : mediaSm && !mediaLg ? (
            <div className="grid-gradient relative mt-[55vh] h-[45vh] w-full">
              <Image
                src={Grid}
                className="pointer-events-none absolute bottom-0 h-full w-full select-none"
                alt=""
                objectFit="cover"
                layout="fill"
              />
            </div>
          ) : (
            <div className="grid-gradient relative mt-[55vh] h-[45vh] w-full">
              <Image
                src={GridSm}
                className="pointer-events-none absolute bottom-0 h-full w-full select-none"
                alt=""
                objectFit="cover"
                layout="fill"
              />
            </div>
          )}
        </div>

        <h2 className="mb-2 text-2xl font-semibold uppercase text-white/50">
          {/* OneWay */}
          Text 1
        </h2>
        <h1 className="mb-16 text-center text-8xl font-bold">
          {/* Social Media */}
          Text 2
          <br />
          {/* <span className="italic">The Right Way</span> */}
          <span className="italic opacity-75">Text 3</span>
        </h1>
        <LoginButton />
        <Link
          href="/about"
          className="mt-3 text-lg font-medium opacity-90 duration-200 hover:opacity-50">
          What is OneWay?
        </Link>
      </main>
    </div>
  )
}

// export const getServerSideProps: GetServerSideProps = async (context) => {
//   const session = await getSession(context)

//   if (!session) {
//     return {
//       redirect: {
//         destination: "/auth",
//         permanent: false,
//       },
//     }
//   }

//   return {
//     props: { session },
//   }
// }

export default Home
