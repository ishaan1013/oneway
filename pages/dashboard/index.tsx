import Head from "next/head"
import Link from "next/link"
import { useEffect } from "react"
import { getSession, useSession } from "next-auth/react"
import { GetServerSideProps } from "next"
import { FiFilePlus } from "react-icons/fi"

import DashboardNav from "../../components/dashboard/nav"

import { useGlobalContext } from "../../context"
import { Session, User } from "next-auth"
import { getToken, JWT } from "next-auth/jwt"
import Post from "../../components/dashboard/post"

const Dashboard = ({
  user,
  accessToken,
}: {
  user: User
  accessToken: string
}) => {
  const { igUserId } = useGlobalContext()

  return (
    <div>
      <Head>
        <title>OneWay Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="xs:px-8 relative z-10 flex min-h-screen w-screen flex-col items-center justify-start overflow-x-hidden px-4 pt-32 pb-16 md:px-16">
        <p className="max-w-3xl text-sm text-neutral-500">
          user: {JSON.stringify(user)}
        </p>
        <p className="max-w-3xl text-sm text-neutral-500">
          accessToken: {accessToken}
        </p>
        <DashboardNav />
        <div className="mb-3 flex w-full items-center justify-between">
          <div>
            <h1 className="text-left text-xl font-bold">Account Overview</h1>
            <p className="text-sm text-neutral-500">
              Hover images for options.
            </p>
          </div>

          <Link href="/dashboard/create">
            <button className="relative flex select-none items-center rounded border-[1px] border-white/25 bg-black py-1.5 pl-3 pr-4 text-lg font-medium duration-200 hover:border-white/75  hover:bg-white/10">
              <FiFilePlus className="mr-2" />
              Create
            </button>
          </Link>
        </div>
        <div className="xs:auto-cols-[300px] slider relative grid w-full auto-cols-[250px] grid-flow-col gap-8 overflow-x-auto pt-2 pb-4 md:auto-cols-[350px] ">
          <Post />
          <Post />
          <Post />
          <Post />
          <Post />
          <Post />
          <Post />
          <Post />
        </div>
      </main>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  // const token = await getToken(context)
  // if (token) {
  //   console.log("JSON Web Token", JSON.stringify(token, null, 2))
  // } else {
  //   console.log("no token")
  // }
  const session = await getSession(context)
  if (session) {
    console.log("Session", JSON.stringify(session, null, 2))
  } else {
    console.log("no session")
  }

  if (!session) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    }
  }

  const { user, accessToken } = session
  return {
    props: { user, accessToken },
  }
}

export default Dashboard
